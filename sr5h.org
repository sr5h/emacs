#+STARTUP: content

* make frame
make new frame at specified position
** codes
#+BEGIN_SRC emacs-lisp
(defun sr5h-make-frame (&optional parameters)
  (interactive)
  (let* ((old-frame-pos (frame-position (selected-frame)))
         (left (car old-frame-pos))
         (alist (cons 'left (+ left 390))))
    (if parameters
        (make-frame parameters)
      (make-frame (list alist)))))
#+END_SRC

* related to slime
** codes
#+BEGIN_SRC emacs-lisp
(defun sr5h-select-slime-repl ()
  (interactive)
  (select-frame-by-name "Emacs: *slime-repl sbcl*"))

;; TODO: how to get frame?
(let ((frame nil))
  (defun sr5h-slime ()
    (interactive)
    (setf frame (sr5h-make-frame '((background-color . "black")
                                   (foreground-color . "white")
                                   (left . 1000)                ; value of left is arbitrary.
                                   (height . 15)
                                   (width . 60)
                                   (alpha 85 . 85))))
    (slime)

    (make-thread (lambda ()
                   (while (not (get-buffer "*slime-repl sbcl*"))
                     (thread-yield))

                   (delete-other-windows))))

  (defun sr5h-kill-slime ()
    (interactive)
    (let ((repl-buf (get-buffer "*slime-repl sbcl*"))
          (inf-buf (get-buffer "*inferior-lisp*"))
          (current-frame (selected-frame)))
      (if repl-buf (kill-buffer repl-buf))
      (if inf-buf (kill-buffer inf-buf))
      (delete-frame frame)
      (select-frame current-frame))))
#+END_SRC
